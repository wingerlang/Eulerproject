from datetime import datetime
import time
"""
Triangular, pentagonal, and hexagonal
Problem 45

Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle        Tn=n(n+1)/2     1, 3, 6, 10, 15,  ...
Pentagonal      Pn=n(3n1)/2     1, 5, 12, 22, 35, ...
Hexagonal       Hn=n(2n1)       1, 6, 15, 28, 45, ...
It can be verified that T_285 = P_165 = H_143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
"""

start = datetime.now()

def triangle(n):
    return int(n * (n+1) /2)
def pentagonal(n):
    return int(n*(3*n-1)/2)
def hexagonal(n):
    return int(n * (2*n -1))

def generator(l, number, cat):
    if not len(l):
        l = []

    if cat == 'tri':
        for n in range(1,number):
            l.append(int(n * (n+1) /2))
        return l

    elif cat == 'pent':
        for n in range(1,number):
            l.append(int(n*(3*n-1)/2))
        return l

    elif cat == 'hex':
        for n in range(1,number):
            l.append(int(n * (2*n -1)))
        return l        

tris = generator([],100000, 'tri')
pents= generator([],100000, 'pent')
hexs = generator([],100000, 'hex')

t, p, h, found = 0, 0, 0, 0

while found < 3:
    try:
        if tris[t] == pents[p] == hexs[h]:
            print("OMG FOUND IT!!!",tris[t], t,p,h)
            found += 1
    except:
        print("Need to add more numbers",t)
        #time.sleep(0.5)
        tris = generator(tris,10000, 'tri')
        pents= generator(pents,10000, 'pent')
        hexs = generator(hexs,10000, 'hex')
   
    if tris[t] > pents[p]:
        p += 1
    elif tris[t] > hexs[h]:
        h += 1
    else:
        t += 1

end = datetime.now()
delta = end-start

print("Answer:",tris[t])
print(delta.seconds + delta.microseconds/1000000, "ms")

# AVG = 175 ms